<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet" targetNamespace="http://tempuri.org/DataSet.xsd" xmlns:mstns="http://tempuri.org/DataSet.xsd" xmlns="http://tempuri.org/DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Project.Properties.Settings.GlobalReference.Default.DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountsTableAdapter" GeneratorDataComponentClassName="AccountsTableAdapter" Name="Accounts" UserDataComponentName="AccountsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Accounts] WHERE (([username] = @Original_username) AND ([admin] = @Original_admin))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_admin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="admin" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Accounts] ([username], [password], [name], [admin]) VALUES (@username, @password, @name, @admin);
SELECT username, password, name, admin FROM Accounts WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@admin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="admin" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT username, password, name, admin FROM dbo.Accounts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Accounts] SET [username] = @username, [password] = @password, [name] = @name, [admin] = @admin WHERE (([username] = @Original_username) AND ([admin] = @Original_admin));
SELECT username, password, name, admin FROM Accounts WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@admin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="admin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_admin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="admin" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="admin" DataSetColumn="admin" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="addUser" Modifier="Public" Name="addUser" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="addUser">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO Accounts
                  (username, password, name)
VALUES (@username,@password,@name); 
SELECT username, password, name, admin FROM Accounts WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="username" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="password" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="name" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Accounts" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="checkAdmin" Modifier="Public" Name="checkAdmin" QueryType="Scalar" ScalarCallRetval="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="checkAdmin">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT admin
FROM     Accounts
WHERE  (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="username" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Accounts" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="getName" Modifier="Public" Name="getName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="getName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT name
FROM     Accounts
WHERE  (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="username" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Accounts" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="getPassword" Modifier="Public" Name="getPassword" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="getPassword">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT password
FROM     Accounts
WHERE  (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="username" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="SearchUsers" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="SearchUsers" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="SearchUsers">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT username, password, name, admin
FROM     Accounts
WHERE  (username LIKE '%' + @username + '%')</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="username" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Accounts" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarsTableAdapter" GeneratorDataComponentClassName="CarsTableAdapter" Name="Cars" UserDataComponentName="CarsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Cars" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Cars] WHERE (([id] = @Original_id) AND ([brand] = @Original_brand) AND ([model] = @Original_model) AND ([price] = @Original_price) AND ([rent price] = @Original_rent_price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_rent_price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="rent price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Cars] ([brand], [model], [price], [rent price]) VALUES (@brand, @model, @price, @rent_price);
SELECT id, brand, model, price, [rent price] FROM Cars WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@rent_price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="rent price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, brand, model, price, [rent price] FROM Cars</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Cars] SET [brand] = @brand, [model] = @model, [price] = @price, [rent price] = @rent_price WHERE (([id] = @Original_id) AND ([brand] = @Original_brand) AND ([model] = @Original_model) AND ([price] = @Original_price) AND ([rent price] = @Original_rent_price));
SELECT id, brand, model, price, [rent price] FROM Cars WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@rent_price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="rent price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_rent_price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="rent price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="brand" DataSetColumn="brand" />
              <Mapping SourceColumn="model" DataSetColumn="model" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="rent price" DataSetColumn="rent price" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Cars" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByModel" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetByBrand" GeneratorSourceName="FillByModel" GetMethodModifier="Public" GetMethodName="GetByBrand" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetByBrand" UserSourceName="FillByModel">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT model, id, brand, price, [rent price] FROM Cars WHERE (brand = @brand)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="brand" ColumnName="brand" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@brand" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Cars" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="getId" Modifier="Public" Name="getId" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="getId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT id
FROM     Cars
WHERE  (brand = @brand) AND (model = @model)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="brand" ColumnName="brand" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@brand" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="model" ColumnName="model" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@model" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Cars" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetPrice" Modifier="Public" Name="GetPrice" QueryType="Scalar" ScalarCallRetval="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetPrice">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT price, [rent price] FROM Cars WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Cars" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="getRent" Modifier="Public" Name="getRent" QueryType="Scalar" ScalarCallRetval="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="getRent">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT [rent price]
FROM     Cars
WHERE  (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Cars" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="SearchCars" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="SearchCars" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="SearchCars">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT id, brand, model, price, [rent price]
FROM     Cars
WHERE  (brand LIKE '%' + @param + '%') OR
                  (model LIKE '%' + @param + '%')</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="param" ColumnName="brand" DataSourceName="[E:\COLLEGE\YEAR 2\SEMESTER 2\EVENT DRIVEN &amp; REACTIVE PROGRAMMING\PROJECT\PROJECTII\PROJECT\DATABASE.MDF].dbo.Cars" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@param" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataSet" msprop:Generator_UserDSName="DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Accounts" msprop:Generator_TableClassName="AccountsDataTable" msprop:Generator_TableVarName="tableAccounts" msprop:Generator_TablePropName="Accounts" msprop:Generator_RowDeletingName="AccountsRowDeleting" msprop:Generator_RowChangingName="AccountsRowChanging" msprop:Generator_RowEvHandlerName="AccountsRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountsRowDeleted" msprop:Generator_UserTableName="Accounts" msprop:Generator_RowChangedName="AccountsRowChanged" msprop:Generator_RowEvArgName="AccountsRowChangeEvent" msprop:Generator_RowClassName="AccountsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="admin" msprop:Generator_ColumnVarNameInTable="columnadmin" msprop:Generator_ColumnPropNameInRow="admin" msprop:Generator_ColumnPropNameInTable="adminColumn" msprop:Generator_UserColumnName="admin" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Cars" msprop:Generator_TableClassName="CarsDataTable" msprop:Generator_TableVarName="tableCars" msprop:Generator_RowChangedName="CarsRowChanged" msprop:Generator_TablePropName="Cars" msprop:Generator_RowDeletingName="CarsRowDeleting" msprop:Generator_RowChangingName="CarsRowChanging" msprop:Generator_RowEvHandlerName="CarsRowChangeEventHandler" msprop:Generator_RowDeletedName="CarsRowDeleted" msprop:Generator_RowClassName="CarsRow" msprop:Generator_UserTableName="Cars" msprop:Generator_RowEvArgName="CarsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="brand" msprop:Generator_ColumnVarNameInTable="columnbrand" msprop:Generator_ColumnPropNameInRow="brand" msprop:Generator_ColumnPropNameInTable="brandColumn" msprop:Generator_UserColumnName="brand">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="model" msprop:Generator_ColumnVarNameInTable="columnmodel" msprop:Generator_ColumnPropNameInRow="model" msprop:Generator_ColumnPropNameInTable="modelColumn" msprop:Generator_UserColumnName="model">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:decimal" />
              <xs:element name="rent_x0020_price" msprop:Generator_ColumnVarNameInTable="columnrent_price" msprop:Generator_ColumnPropNameInRow="rent_price" msprop:Generator_ColumnPropNameInTable="rent_priceColumn" msprop:Generator_UserColumnName="rent price" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Accounts" />
      <xs:field xpath="mstns:username" />
    </xs:unique>
    <xs:unique name="CarsKey" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cars" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>